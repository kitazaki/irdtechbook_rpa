7c7
< リアルタイム処理を実装することで、これまで実施できなかった業務ができるようになるなど、大きなメリットもありますので、是非最後までお読みいただければ嬉しく感じます。
---
> リアルタイム処理を実装することで、これまで実施できなかった業務ができるようになるなど、大きなメリットもありますので、是非最後までお読みいただければ嬉しく感じます。また本章ではPowerAutomate for desktopで作成したサンプルフローも掲載致します。その他のRPA製品でも同様のフローは作れますので、よかったら参考にしてください。
10,11c10,11
< 製造業でのPRA導入事例として「作業日報の入力作業のRPAによる自動化」など、よくあがる事例です。
< 工場では、工程1→工程2→工程3→完成品のように、いくつかの工程を通して製品が生産されます。例えば、工程2のYさんが、今日、機種X1を100台、機種X2を200台、機種X3を35台の作業をしたとしたら、その実績を作業日報に書きます。
---
> 製造業でのPRA導入事例として「作業日報の入力作業自動化」など、よくあがる事例です。
> 工場では、工程1→工程2→工程3→完成品のように、いくつかの工程を通して製品が生産されます。例えば工程2のYさんが機種X1を100台、機種X2を200台、機種X3を35台の作業をしたとしたら、その実績を作業日報に記入します。
14c14
< そうすると、システム上正しい在庫が見えるのは全ての投入が終ってからになります。つまり、翌朝にならないとシステム上は正しい在庫が見れないのです。
---
> そうすると、基幹システム上正しい在庫が見えるのは全ての投入が終ってからになります。つまり、翌朝にならないと基幹システム上では正しい在庫が見れないのです。
18c18
< 常に最新の「在庫状況」がシステム上で見えることで、最適な判断ができます。最新の在庫がシステム上で見えない以上、現場におもむき在庫状況を確認しなければならず、非常に無駄な作業となります。
---
> 常に最新の「在庫状況」が基幹システム上で見えることで、最適な判断ができます。最新の在庫が基幹システム上で見えない以上、現場に赴き在庫状況を確認しなければならず、非常に無駄な作業となります。
20c20
< しかし、現実はそこに人手を割いてでも最新の情報にするのが難しく、結果、翌朝にならないと在庫が見えない状況になっている工場も多いです。
---
> しかし、現実はそこに人手を割いてでも最新にするのが難しく、結果、翌朝にならないと在庫が見えない状況になっている工場も多いです。
22c22
< こういった時に、RPAによるリアルタイム処理が活きてきます。RPAでリアルタイム処理する形なら、必要な時にシナリオを動かすのではなく、リアルタイム処理では常にシナリオが動き続け、必要な条件が揃った際に必要な処理をさせることが可能となります。
---
> そこで、RPAによるリアルタイム処理が活きてきます。必要な時にシナリオを動かすのではなく、リアルタイム処理では常にシナリオが動き続け、必要な条件が揃った際に必要な処理をさせることが可能となります。
39c39
< このようにみると、良いことばかりではありません。特にシナリオが複雑化しやすく、トラブル時の復旧時間が長くなりがちです。そのぶん現場には負担を強いることになるので、エラー原因が追跡できるような情報は可能な限り残すようにしましょう。
---
> このようにみると、良いことばかりではありません。特にシナリオが複雑化しやすく、トラブル時の復旧時間が長くなりがちです。長くなる分、現場には負担を強いることになるので、可能な限りエラー原因が追跡できるような情報は残すようにしましょう。
42c42,44
< ここで、特定の条件が満たされた際に、所定の処理を実行するシナリオを作成すれば良いわけですが、特定の条件とは、どのようなものがあるでしょうか？
---
> まず、loogFlgを初期化（0を代入）します。次に、loopFlgが0以外の値になったらループを抜けるようにLoop処理を追加します。Loopの中では、loopFlgの値を確認し、0以外の時にループを抜けるようにしています。また、Loop内では、ログファイルにloopFlgの値と、loop回数(loopIndex）を出力しています。
> 
> このLoop処理の中で、特定の条件が満たされた際に、所定の処理を実行するシナリオを作成すれば良いわけですが、特定の条件とは、どのようなものがあるでしょうか？
52c54
< 先ほどの作業日報の例で行くと、トリガーとしてはYさんの作業を完了させたタイミングになります。機種X1 100台分の作業が完了した際に、システムにX1 100台と投入することで、在庫がリアルタイムで見えるようになります。
---
> 先ほどの作業日報の例で行くと、トリガーとしてはYさんの作業を完了させたタイミングになります。機種X1 100台分の作業が完了した際に、基幹システムにX1 100台と投入することで、在庫がリアルタイムで見えるようになります。
54c56
< 今なら、Teams等のチャットツールから入力し、PowerAutomate等でCSVファイルを出力する、なんてやりかたもありそうですね。
---
> 今なら、M365のFormsを使ったり、チャットツールから入力し、PowerAutomateでCSVファイルを出力する、なんてやりかたもありそうですね。
56c58,59
< 併せてログファイルも出力しています。ログファイルについては後ほど説明致します。
---
> 例えば、これまでの例のように作業日報の登録であれば、CSVファイルを読み取り、基幹システムを操作して転記と登録を行います。
> 併せて処理済みのファイルはbkupフォルダに移動させます。これは同じファイルで二重登録を避ける目的と、実際に登録したデータのエビデンスを残す意味があります。またログファイルも出力しております。ログファイルについては後ほど説明致します。
57a61
> このようなフローを組むことで、基幹システムへの登録作業をRPAが人知れずリアルタイムに行ってくれることで、これまでどうしても実現できなかったリアルタイムでの正しい在庫管理ができるようになりました。
61c65
< これまでの事例としてあげてきたものが、製造業における在庫移動の事例になります。ここでは改めて処理フローを見てみましょう。
---
> これまでの事例としてあげてきたものが、製造業における在庫移動の事例になります。実際に私が情シス時代に構築したシナリオで、数値もかなりリアルな値になっています。では改めて処理フローを見てみましょう。
63c67,68
< 前項は在庫間移動でしたが、ここでは完成品入力になります。製造業においては、1つの機種を生産するのに、加工指示書と呼ばれる書類が発行されます。各現場は、この加工指示書に基づいて実際の生産を実施します。完成品入力は、下記の例では総務部門で入力することになっており、加工指示書と作業日報の物理的な移動も発生していました。
---
> 前項は在庫間移動でしたが、ここでは完成品入力になります。製造業においては、1つの機種を生産するのに、加工指示書と呼ばれる書類が発行されます。各現場は、この加工指示書に基づいて実際の生産を実施します。
> こちらも、私が情シス時代に実際に構築したシナリオです。完成品入力は、現場応援のため総務部門で入力することになっており、加工指示書と作業日報の物理的な移動（現場→総務）も発生していました。
65c70
< リアルタイム処理は、パソコンを占有してしまうため、人が利用しているパソコン以外のパソコンで動かすことになり、ずっと監視が出来るわけではありません。そのため、エラーが発生した際に如何に早く気づくことができるか、またなぜエラーが発生したのかを知ることが大切です。
---
> リアルタイム処理は、パソコンを占有してしまうため、常に人が見続ける（エラーなく処理が終わるか監視する）ことができません。そのため、エラーが発生した際に如何に早く気づくことができるか、またなぜエラーが発生したのかを知ることが大切です。
70c75
< こちらのフローは、エラー発生時に処理されるフローになります。ログファイルへの書き込みと、画面キャプチャを取得し、Outlookを使ってメール送信を行っています。
---
> こちらのフローは、エラー発生時に処理されるフローになります。ログファイルへの書き込みと、画面キャプチャを取得し、Outlookを使ってメール送信をおこなっています。
89a95
> また、登録が目的のフローであれば、登録がどこまで済んでいたのかの確認も必要となります。実際の登録状況と、監視フォルダやbkupフォルダ、またログファイルの内容を見比べ、どこから処理を再開させれば良いのかを判断する必要もあります。
93a100
> 
